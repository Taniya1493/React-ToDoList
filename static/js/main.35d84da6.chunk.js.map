{"version":3,"sources":["modals/CreateTask.js","modals/EditTask.js","components/Card.js","components/TodoList.js","App.js","index.js"],"names":["CreateTask","modal","toggle","save","useState","taskname","setTaskName","description","setDescription","handleChange","e","target","name","value","Modal","isOpen","ModalHeader","ModalBody","className","type","onChange","rows","ModalFooter","Button","color","onClick","taskObj","EditTaskPopup","updateTask","taskName","useEffect","Name","Description","preventDefault","tempObj","Card","index","deleteTask","updateListArray","setModal","colors","primaryColor","secondaryColor","class","style","EditTask","obj","TodoList","taskList","setTaskList","arr","localStorage","getItem","JSON","parse","tempList","splice","setItem","stringify","window","location","reload","map","push","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35d84da6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\n\nconst CreateTask =({modal,toggle,save})=>{\n    const [taskname,setTaskName]=useState(\"\");\n    const [description,setDescription]=useState(\"\");\n\n    const handleChange=(e)=>{\n        const {name,value}=e.target\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }\n        else{\n            setDescription(value)\n        }\n    }\n\n    const handleSave=()=>{\n        let taskObj={}\n        taskObj[\"Name\"]=taskname\n        taskObj[\"Description\"]=description\n        save(taskObj)\n    }\n     return(\n         <>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Create Task</ModalHeader>\n        <ModalBody>\n         <form>\n             <div className=\"form-group\">\n                 <label>Task Name</label>\n                 <input type=\"text\" className=\"form-control\"\n                     value={taskname} onChange={handleChange}\n                     name=\"taskName\"\n                 />\n             </div>\n             <div className=\"form-group\">\n                <label>Description</label>\n                 <textarea rows=\"5\"  className=\"form-control\"\n                 value={description} onChange={handleChange}\n                 name=\"description\"></textarea>\n             </div>\n         </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggle} onClick={handleSave}>Create</Button>\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n         </>\n     )\n}\n\n\nexport default CreateTask;","import React, { useState , useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n\n    useEffect(() => {\n        setTaskName(taskObj.Name)\n        setDescription(taskObj.Description)\n    },[])\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n            <ModalBody>\n            \n                    <div className = \"form-group\">\n                        <label>Task Name</label>\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description</label>\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                    </div>\n                \n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default EditTaskPopup;\n","import React, {useState} from 'react';\nimport EditTask from '../modals/EditTask'\n\nconst Card = ({taskObj, index, deleteTask, updateListArray}) => {\n    const [modal, setModal] = useState(false);\n\n    const colors = [\n        {\n            primaryColor : \"#5D93E1\",\n            secondaryColor : \"#ECF3FC\"\n        },\n        {\n            primaryColor : \"#F9D288\",\n            secondaryColor : \"#FEFAF1\"\n        },\n        {\n            primaryColor : \"#5DC250\",\n            secondaryColor : \"#F2FAF1\"\n        },\n        {\n            primaryColor : \"#F48687\",\n            secondaryColor : \"#FDF1F1\"\n        },\n        {\n            primaryColor : \"#B964F7\",\n            secondaryColor : \"#F3F0FD\"\n        }\n    ]\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    const updateTask = (obj) => {\n        updateListArray(obj, index)\n    }\n\n    const handleDelete = () => {\n        deleteTask(index)\n    }\n\n    return (\n        <div class = \"card-wrapper mr-5\">\n            <div class = \"card-top\" style={{\"background-color\": colors[index%5].primaryColor}}></div>\n            <div class = \"task-holder\">\n                <span class = \"card-header\" style={{\"background-color\": colors[index%5].secondaryColor, \"border-radius\": \"10px\"}}>{taskObj.Name}</span>\n                <p className = \"mt-3\">{taskObj.Description}</p>\n\n                <div style={{\"position\": \"absolute\", \"right\" : \"20px\", \"bottom\" : \"20px\"}}>\n                    <i class = \"far fa-edit mr-3\" style={{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {() => setModal(true)}></i>\n                    <span>   </span>\n                    <i class=\"fas fa-trash-alt\" style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {handleDelete}></i>\n                </div>\n        </div>\n        <EditTask modal = {modal} toggle = {toggle} updateTask = {updateTask} taskObj = {taskObj}/>\n        </div>\n    );\n};\n\nexport default Card;","import React, {useEffect, useState} from 'react';\nimport CreateTask from '../modals/CreateTask'\nimport Card from './Card';\n\nconst TodoList = () => {\n    const [modal, setModal] = useState(false);\n    const [taskList, setTaskList] = useState([])\n    \n    useEffect(() => {\n        let arr = localStorage.getItem(\"taskList\")\n       \n        if(arr){\n            let obj = JSON.parse(arr)\n            setTaskList(obj)\n        }\n    }, [])\n\n\n    const deleteTask = (index) => {\n        let tempList = taskList\n        tempList.splice(index, 1)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const updateListArray = (obj, index) => {\n        let tempList = taskList\n        tempList[index] = obj\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    const saveTask = (taskObj) => {\n        let tempList = taskList\n        tempList.push(taskObj)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(taskList)\n        setModal(false)\n    }\n\n\n    return (\n        <>\n            <div className = \"header text-center\">\n                <h3>Todo List</h3>\n                <button className = \"btn btn-primary mt-2\" onClick = {() => setModal(true)} >Create Task</button>\n            </div>\n            <div className = \"task-container\">\n            {taskList && taskList.map((obj , index) => <Card taskObj = {obj} index = {index} deleteTask = {deleteTask} updateListArray = {updateListArray}/> )}\n            </div>\n            <CreateTask toggle = {toggle} modal = {modal} save = {saveTask}/>\n        </>\n    );\n};\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'font-awesome/css/font-awesome.min.css'\n\nfunction App() {\n  return (\n    <>\n      <TodoList/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}